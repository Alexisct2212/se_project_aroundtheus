!function(){"use strict";class e{constructor(e,t,s){this._cardData=e,this._templateSelector=t,this._link=e.link,this._name=e.name,this._element=null,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._templateSelector).content.cloneNode(!0).querySelector(".card")}_setEventListeners(){const e=this._element.querySelector(".card__like-button");e.addEventListener("click",(()=>{e.classList.toggle("card__like-button_active")})),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._cardData)}))}_handleDeleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".block");return e.src=this._link,e.alt=this._name,t.textContent=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=[],this._submitButton=null,this._formEl=t}_showInputError(e){const t=e.parentElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=e.parentElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListener(e){this._inputEls=Array.from(e.querySelectorAll(this._inputSelector)),this._submitButton=e.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){const e=this._formEl;e.addEventListener("submit",(e=>{e.preventDefault(),this.toggleButtonState()})),this._setEventListener(e)}toggleButtonState(){this._toggleButtonState()}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),n=(o.querySelector(".modal__close"),document.querySelector(".profile__title")),i=document.querySelector(".modal__input"),l=document.querySelector(".profile__description"),a=document.querySelector(".modal__input:last-of-type"),c=o.querySelector(".modal__form"),u=document.querySelector(".add-modal__form"),p=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__add-button"));document.querySelector("#add-card-modal").querySelector(".modal__close"),u.querySelector("#modal__input-text"),u.querySelector("#modal__input-link"),document.querySelector(".preview__modal").querySelector(".modal__close"),document.querySelector(".profile__image");class d{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleRemoteClick=e=>{e.target===e.currentTarget&&this.close(e.currentTarget)};setEventListeners(){const e=this._popupElement.querySelector(".modal__close");this._popupElement.addEventListener("click",(t=>{e&&e.addEventListener("click",(()=>this.close()))})),this._popupElement.addEventListener("click",(e=>{e.target===this._popupElement&&this.close()}))}}class m extends d{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=s}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}}const _=new class{constructor(e,t){let{items:s,renderer:r}=e;this._renderedItems=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",description:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",description:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",description:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",description:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",description:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",description:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const s=new e(t,"#card-template",(()=>{v.open(t)})).generateCard();_.addItem(s)}},".cards__list");_.renderItems();const h=new m({popupSelector:"#profile-edit-modal",handleFormSubmit:e=>{g.setUserInfo({name:e.name,job:e.job}),h.close()}});h.setEventListeners();const S=new m({popupSelector:"#add-card-modal",handleFormSubmit:t=>{const s={name:t.title,link:t.link},r=new e(s,"#card-template",(()=>{v.open(s)})).generateCard();_.addItem(r),S.close()}});S.setEventListeners(),p.addEventListener("click",(()=>{S.open(),E.toggleButtonState()}));const v=new class extends d{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._previewImageUrl=this._popupElement.querySelector(".preview__image"),this._previewImageDescription=this._popupElement.querySelector(".preview__description-image")}open(e){this._previewImageUrl.src=e.link,this._previewImageUrl.alt=e.name,this._previewImageDescription.textContent=e.name,super.open()}}({popupSelector:".preview__modal"});v.setEventListeners(),new t(s,c).enableValidation();const E=new t(s,u);E.enableValidation();const g=new class{constructor(e){let{profileTitle:t,profileDescription:s,profilePicture:r}=e;this._profileTitle=t,this._profileDescription=s}getUserInfo(){return{name:this._profileTitle.textContent,job:this._profileDescription.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._profileTitle.textContent=t,this._profileDescription.textContent=s}}({profileTitle:n,profileDescription:l});r.addEventListener("click",(()=>{const e=g.getUserInfo();i.value=e.name,a.value=e.job,h.open()})),add}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,